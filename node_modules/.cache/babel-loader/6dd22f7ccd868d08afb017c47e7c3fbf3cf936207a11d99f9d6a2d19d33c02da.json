{"ast":null,"code":"var _jsxFileName = \"/Users/nikhil/image-gallery/src/components/image_grid/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Cars } from '../../constants/cars';\nimport \"./index.scss\";\nimport CarModal from '../car_modal';\nimport { ALL } from '../../constants/generic_const';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImageGrid = props => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [activeCar, setActiveCar] = useState(1);\n  const [carBrand, setCarBrand] = useState(props.currentBrand);\n  const openModal = carId => {\n    setShowModal(true);\n    setActiveCar(carId);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n  };\n  const toggleDisplayGrid = currentBrand => {\n    let carGrid;\n    if (currentBrand === ALL) {\n      carGrid = Cars.map(car => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"car_image_container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: car.url,\n            className: \"car_image\",\n            onClick: () => {\n              openModal(car.id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this);\n      });\n    } else {\n      carGrid = Cars.map(car => {\n        if (car.brand === currentBrand) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car_image_container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: car.url,\n              className: \"car_image\",\n              onClick: () => {\n                openModal(car.id);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this);\n        }\n      });\n    }\n    return carGrid;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image_container\",\n      children: [toggleDisplayGrid(props.currentBrand), showModal && /*#__PURE__*/_jsxDEV(CarModal, {\n        activeCarId: activeCar,\n        closeModal: closeModal,\n        carData: Cars\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ImageGrid, \"obsFrwEQiHPPPDfp7EeDl1hpbgw=\");\n_c = ImageGrid;\nexport default ImageGrid;\nvar _c;\n$RefreshReg$(_c, \"ImageGrid\");","map":{"version":3,"names":["React","useState","Cars","CarModal","ALL","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageGrid","props","_s","showModal","setShowModal","activeCar","setActiveCar","carBrand","setCarBrand","currentBrand","openModal","carId","closeModal","toggleDisplayGrid","carGrid","map","car","className","children","src","url","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","brand","activeCarId","carData","_c","$RefreshReg$"],"sources":["/Users/nikhil/image-gallery/src/components/image_grid/index.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Cars } from '../../constants/cars'\nimport \"./index.scss\"\nimport CarModal from '../car_modal'\nimport { ALL } from '../../constants/generic_const'\n\nconst ImageGrid = (props) => {\n  const [showModal, setShowModal] = useState(false)\n  const [activeCar, setActiveCar] = useState(1)\n  const [carBrand, setCarBrand] = useState(props.currentBrand)\n\n  const openModal = (carId) => {\n    setShowModal(true)\n    setActiveCar(carId)\n  }\n\n  const closeModal = () => {\n    setShowModal(false)\n  }\n\n  const toggleDisplayGrid = (currentBrand) => {\n    let carGrid\n    if(currentBrand === ALL){\n      carGrid = Cars.map((car) => {\n        return(\n          <div className='car_image_container'>\n            <img src={car.url} className='car_image' onClick={() => {openModal(car.id)}}/>\n          </div>\n        )\n      })\n    }else{\n      carGrid = Cars.map((car) => {\n        if(car.brand === currentBrand){\n          return(\n            <div className='car_image_container'>\n              <img src={car.url} className='car_image' onClick={() => {openModal(car.id)}}/>\n            </div>\n          )\n        }\n      })\n    }\n    return carGrid\n  }\n\n  return (\n    <>\n      <div className='image_container'>\n        {\n          toggleDisplayGrid(props.currentBrand)\n        }\n        {\n          showModal && \n          <CarModal \n            activeCarId={activeCar}\n            closeModal={closeModal}\n            carData={Cars}\n          />\n        }\n      </div>\n    </>\n  )\n}\n\nexport default ImageGrid"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}